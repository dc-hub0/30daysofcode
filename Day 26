You are given an integer array nums and an integer k.

An integer h is called valid if all values in the array that are strictly greater than h are identical.

For example, if nums = [10, 8, 10, 8], a valid integer is h = 9 because all nums[i] > 9 are equal to 10, but 5 is not a valid integer.

You are allowed to perform the following operation on nums:

Select an integer h that is valid for the current values in nums.
For each index i where nums[i] > h, set nums[i] to h.
Return the minimum number of operations required to make every element in nums equal to k. If it is impossible to make all elements equal to k, return -1.

 CODE:

import java.util.*;

class Solution {
    public int minOperations(int[] nums, int k) {
        // Step 1: Check if all elements can be reduced to k
        for (int num : nums) {
            if (num < k) return -1;
        }

        // Step 2: Sort nums in descending order
        Arrays.sort(nums);
        int operations = 0;
        int max = nums[nums.length - 1];

        // Step 3: Reduce nums step by step
        for (int i = nums.length - 1; i >= 0 && max > k; i--) {
            if (nums[i] < max) {
                max = nums[i]; // Update max to the next smaller value
                operations++;
            }
        }

        return operations + (max > k ? 1 : 0);
    }
}
©leetcode
