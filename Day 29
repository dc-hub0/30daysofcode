You are given a string s that consists of lowercase English letters.

A string is called special if it is made up of only a single character. For example, the string "abc" is not special, whereas the strings "ddd", "zz", and "f" are special.

Return the length of the longest special substring of s which occurs at least thrice, or -1 if no special substring occurs at least thrice.

A substring is a contiguous non-empty sequence of characters within a string.

CODE:

class Solution {
    public int maximumLength(String s) {
        Map<String, Integer> strimap = new HashMap<>();
      int maxLength = -1; 
      for (int i = 0; i < s.length(); i++) {
          char currentChar = s.charAt(i);
          StringBuilder specialSubstring = new StringBuilder();
          for (int j = i; j < s.length(); j++) {
              if (s.charAt(j) == currentChar) {
                  specialSubstring.append(currentChar);
                  String substring = specialSubstring.toString();
                  strimap.put(substring, strimap.getOrDefault(substring, 0) + 1);
              } else {
                  break; 
              }
          }
      }
      for (Map.Entry<String, Integer> entry : strimap.entrySet()) {
          if (entry.getValue() >= 3) {
              maxLength = Math.max(maxLength, entry.getKey().length());
          }
      }
      return maxLength;
    }
}
